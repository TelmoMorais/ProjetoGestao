// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoGestao.Data;

namespace ProjetoGestao.Migrations.ProjetoGestao
{
    [DbContext(typeof(ProjetoGestaoContext))]
    [Migration("20220122123110_reltorio")]
    partial class reltorio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoGestao.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("NumeroTelemovel")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Colaborador", b =>
                {
                    b.Property<int>("ColaboradorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FuncaoId")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeColaborador")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("NumeroTelemovel")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("ColaboradorId");

                    b.HasIndex("FuncaoId");

                    b.ToTable("Colaborador");
                });

            modelBuilder.Entity("ProjetoGestao.Models.ColaboradoresProjeto", b =>
                {
                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.HasKey("ProjetoId", "ColaboradorId");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("ColaboradoresProjeto");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Funcao", b =>
                {
                    b.Property<int>("FuncaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeFuncao")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("FuncaoId");

                    b.ToTable("Funcao");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Gestor", b =>
                {
                    b.Property<int>("GestorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExperienciaComoGestor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeGestor")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("NumeroTelemovel")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("GestorId");

                    b.ToTable("Gestor");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Projeto", b =>
                {
                    b.Property<int>("ProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("DataEfetivaFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEfetivaInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataPrevistaFim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataPrevistaInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoProjeto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GestorId")
                        .HasColumnType("int");

                    b.Property<string>("NomeProjeto")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("ProjetoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("GestorId");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Relatorio", b =>
                {
                    b.Property<int>("RelatorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEfetivaInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeRelatorio")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.HasKey("RelatorioId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Relatorio");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Tarefa", b =>
                {
                    b.Property<int>("TarefaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<string>("ColaboradorResponsavelTarefa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEfetivaFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEfetivaInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataPrevistaFim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataPrevistaInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoTarefa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeTarefa")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.HasKey("TarefaId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Tarefa");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Colaborador", b =>
                {
                    b.HasOne("ProjetoGestao.Models.Funcao", "Funcao")
                        .WithMany("Colaboradores")
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcao");
                });

            modelBuilder.Entity("ProjetoGestao.Models.ColaboradoresProjeto", b =>
                {
                    b.HasOne("ProjetoGestao.Models.Colaborador", "Colaborador")
                        .WithMany("ColaboradoresProjetos")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoGestao.Models.Projeto", "Projeto")
                        .WithMany("ColaboradoresProjetos")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Projeto", b =>
                {
                    b.HasOne("ProjetoGestao.Models.Cliente", "Cliente")
                        .WithMany("Projetos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoGestao.Models.Gestor", "Gestor")
                        .WithMany("Projetos")
                        .HasForeignKey("GestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Gestor");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Relatorio", b =>
                {
                    b.HasOne("ProjetoGestao.Models.Projeto", "Projeto")
                        .WithMany("Relatorios")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Tarefa", b =>
                {
                    b.HasOne("ProjetoGestao.Models.Colaborador", "Colaborador")
                        .WithMany()
                        .HasForeignKey("ColaboradorId");

                    b.HasOne("ProjetoGestao.Models.Projeto", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Cliente", b =>
                {
                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Colaborador", b =>
                {
                    b.Navigation("ColaboradoresProjetos");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Funcao", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Gestor", b =>
                {
                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("ProjetoGestao.Models.Projeto", b =>
                {
                    b.Navigation("ColaboradoresProjetos");

                    b.Navigation("Relatorios");

                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
